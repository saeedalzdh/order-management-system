# generated by datamodel-codegen:
#   filename:  orders.yaml
#   timestamp: 2025-04-12T13:47:24+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum

from pydantic import BaseModel, Field, conint


class OrderStatusEnum(Enum):
    """
    Order status codes:
    - 1: Received
    - 2: Preparing
    - 3: Ready for pickup
    - 4: Completed
    - 5: Canceled

    """

    RECEIVED = 1
    PREPARING = 2
    READY_FOR_PICKUP = 3
    COMPLETED = 4
    CANCELED = 5


class OrderStatusUpdate(BaseModel):
    status: OrderStatusEnum


class OrderItemCreate(BaseModel):
    name: str
    plu: str
    quantity: conint(ge=1)


class OrderItem(BaseModel):
    id: int
    order_id: int
    name: str
    plu: str
    quantity: conint(ge=1)


class OrderStatus(BaseModel):
    id: int
    order_id: int
    status: OrderStatusEnum
    timestamp: datetime
    duration: int | None = Field(None, description="Computed duration in seconds")


class HTTPError(BaseModel):
    status_code: int
    message: str
    detail: str | None = None


class Customer(BaseModel):
    name: str
    phoneNumber: str


class Address(BaseModel):
    city: str
    street: str
    postalCode: str


class OrderCreate(BaseModel):
    account_id: str
    brand_id: str
    channel_order_id: str
    customer_id: int
    address_id: int
    pickup_time: datetime
    items: list[OrderItemCreate]


class Order(BaseModel):
    id: int
    account_id: str | None = None
    brand_id: str | None = None
    channel_order_id: str
    customer: Customer | None = None
    delivery_address: Address | None = None
    pickup_time: datetime
    created_at: datetime
    items: list[OrderItem]
    status: OrderStatusEnum | None = None
    status_history: list[OrderStatus]
